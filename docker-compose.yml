services:
  api:
    build:
      context: api/
      dockerfile: Dockerfile
    container_name: fastapi
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./api/.env
    networks:
      - my_network
    volumes:
      - "./api:/app"
    
  # frontend:
  #   build: 
  #     context: frontend/
  #     dockerfile: Dockerfile
  #   container_name: vuejs
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - api
  #   networks:
  #     - my_network
  #   volumes:
  #     - "./frontend/:/app/"
  
  webserver:
    build: 
      context: webserver/
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - api
      # - frontend
    networks:
      - my_network
    volumes:
      - "./webserver/default.conf:/etc/nginx/conf.d/default.conf"
      # - "./frontend/public:/usr/share/nginx/html"
    links:
      - api
      # - frontend

  db:
    image: postgres:17
    container_name: postgresql
    env_file:
      - ./api/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - "./postgres_data:/var/lib/postgresql/data"
    networks:
      - my_network


  pgadmin:
    build:
      context: pgadmin/
      dockerfile: Dockerfile
    container_name: pgadmin
    restart: always
    ports:
      - "2002:80"
    env_file:
      - ./api/.env
    depends_on:
      - db
    networks:
      - my_network
    
  redis:
    image: redis:6

    container_name: redis

    ports:
     - "6379:6379"

    networks:
     - my_network

  celery:
    build: ./api/
    container_name: celery

    command: celery -A src.celery_tasks.c_app worker --loglevel=INFO

    volumes:
      - ./api:/app

    depends_on:
      - redis

    env_file:
      - ./api/.env

    networks:
      - my_network



networks:
  my_network:

volumes:
  postgres_data: